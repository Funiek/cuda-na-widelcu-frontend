//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://cudanawidelcu.ds360.pl/", ConfigurationName="ServiceReference1.ImageService")]
    public interface ImageService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cudanawidelcu.ds360.pl/ImageService/downloadImageRequest", ReplyAction="http://cudanawidelcu.ds360.pl/ImageService/downloadImageResponse")]
        System.Threading.Tasks.Task<ServiceReference1.downloadImageResponse> downloadImageAsync(ServiceReference1.downloadImageRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class downloadImageRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="downloadImage", Namespace="http://cudanawidelcu.ds360.pl/", Order=0)]
        public ServiceReference1.downloadImageRequestBody Body;
        
        public downloadImageRequest()
        {
        }
        
        public downloadImageRequest(ServiceReference1.downloadImageRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial class downloadImageRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string recipeName;
        
        public downloadImageRequestBody()
        {
        }
        
        public downloadImageRequestBody(string recipeName)
        {
            this.recipeName = recipeName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class downloadImageResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="downloadImageResponse", Namespace="http://cudanawidelcu.ds360.pl/", Order=0)]
        public ServiceReference1.downloadImageResponseBody Body;
        
        public downloadImageResponse()
        {
        }
        
        public downloadImageResponse(ServiceReference1.downloadImageResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial class downloadImageResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public byte[] @return;
        
        public downloadImageResponseBody()
        {
        }
        
        public downloadImageResponseBody(byte[] @return)
        {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface ImageServiceChannel : ServiceReference1.ImageService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class ImageServiceClient : System.ServiceModel.ClientBase<ServiceReference1.ImageService>, ServiceReference1.ImageService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ImageServiceClient() : 
                base(ImageServiceClient.GetDefaultBinding(), ImageServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.ImageServiceImplPort.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ImageServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ImageServiceClient.GetBindingForEndpoint(endpointConfiguration), ImageServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ImageServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ImageServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ImageServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ImageServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ImageServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference1.downloadImageResponse> ServiceReference1.ImageService.downloadImageAsync(ServiceReference1.downloadImageRequest request)
        {
            return base.Channel.downloadImageAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.downloadImageResponse> downloadImageAsync(string recipeName)
        {
            ServiceReference1.downloadImageRequest inValue = new ServiceReference1.downloadImageRequest();
            inValue.Body = new ServiceReference1.downloadImageRequestBody();
            inValue.Body.recipeName = recipeName;
            return ((ServiceReference1.ImageService)(this)).downloadImageAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ImageServiceImplPort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ImageServiceImplPort))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8080/cuda-na-widelcu-backend/ImageService");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ImageServiceClient.GetBindingForEndpoint(EndpointConfiguration.ImageServiceImplPort);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ImageServiceClient.GetEndpointAddress(EndpointConfiguration.ImageServiceImplPort);
        }
        
        public enum EndpointConfiguration
        {
            
            ImageServiceImplPort,
        }
    }
}
